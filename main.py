from kivy.app import App
from kivy.uix.boxlayout import BoxLayout
from kivy.uix.label import Label
from kivy.uix.textinput import TextInput
from kivy.uix.button import Button
from kivy.core.window import Window
Window.size=(500,600)
Window.clearcolor=(143/274,63/69,20/80,1)


class BloodTestRiskApp(App):

    def build(self):


        self.layout = BoxLayout(orientation='vertical')

        self.labels = [
            "Лейкоциты:",
            "Эритроциты:",
            "Тромбоциты:",
            "Гемоглобин, г/л:",
            "Гематокрит, %:",
            "Средний объём эритроцита, фл:",
            "Нейтрофилы, %:",
            "Лимфоциты, %:",
            "Моноциты, %:",
            "Эозинофилы, %:",
            "Базофилы, %:",
            "СОЭ, мм/ч:"
        ]

        self.inputs = []

        for label in self.labels:
            self.layout.add_widget(Label(text=label))
            input_field = TextInput(multiline=False)
            self.layout.add_widget(input_field)
            self.inputs.append(input_field)

        submit_button = Button(text="Проверить риски", on_press=self.check_risks)

        self.layout.add_widget(submit_button)

        self.result_label = Label(text="")
        self.layout.add_widget(self.result_label)

        return self.layout

    def check_risks(self, instance):
        try:

            leukocytes = float(self.inputs[0].text)
            erythrocytes = float(self.inputs[1].text)
            platelets = float(self.inputs[2].text)
            hemoglobin = float(self.inputs[3].text)
            hematocrit = float(self.inputs[4].text)
            mean_cell_volume = float(self.inputs[5].text)
            neutrophils = float(self.inputs[6].text)
            lymphocytes = float(self.inputs[7].text)
            monocytes = float(self.inputs[8].text)
            eosinophils = float(self.inputs[9].text)
            basophils = float(self.inputs[10].text)
            esr = float(self.inputs[11].text)


            risks = []


            if leukocytes > 10.0:
                risks.append("бронхит, гайморит, аппендицит, абсцесс, онкология. Вам стоит правильно питаться, больше отдыхать, избегать переохлаждения или перегрева.")
            if leukocytes < 4:
                risks.append("дефицит витамина B12, агранулоцитоз, онкология, апластическая анемия, ВИЧ, грипп, туберкулёз, гиперспленизм. Не употребляйте сырую воду, тщательно мойте фрукты и овощи.")
            if erythrocytes > 5.2:
                risks.append("Ишемия, гемобластоз, отравление, астма, бронхит, гипоксия, пиелонефрит, гломерулонефрит, киста почки. Ешьте больше фруктов и овощей, усильте питьевой режим за счёт обычной воды, исключите сладкое, газировки, жирную пищу.")
            if erythrocytes < 3.5:
                risks.append("Анемия, повреждение почки, ЧМТ, рак легкого, инфаркт легкого, гемолиз, авитаминоз. Принимайте витаминные комплексы.")
            if platelets > 400:
                risks.append("Пневмония, пиелонефрит, менингит, туберкулёз, сепсис, анемия, онкология. Ешьте чеснок, гранат, морепродукты, клюкву, чернику, помидоры, гречку, виноград.")
            if platelets < 160:
                risks.append("Дефицит витамина B12, рак крови, спленомегалия, ветряная оспа, ВИЧ, гепатит С. Следите за питанием: рацион должен быть разнообразным и сбалансированным, не злоупотребляйте алкогольными напитками. ")
            if hemoglobin > 160:
                risks.append("Митральный стеноз, фиброз лёгких, гипервитаминоз B6 и B12, опухоль крови, ожирение, стеноз почечной артерии. Вам стоит пить больше жидкости.")
            if hemoglobin < 120:
                risks.append("Анемия, рак, диабет, талассемия, недостаток железа, дефицит витамина В12. Рекомендуется употреблять продукты, насыщенные железом.")
            if hematocrit > 50:
                risks.append("Анемия, лейкоз, дефицит витамина B12, поликистоз, ожог. Дышите воздухом, обогощенным кислородом, не курите, пейте достаточно воды.")
            if hematocrit < 36:
                risks.append("Анемия, онкология, стеноз почечной артерии, поликистоз почки, заболевания сосудов или печени. Рекомендуется есть курицу, сухофрукты, бобы, яйца, красное мясо, морепродукты, зелень.")
            if mean_cell_volume > 100:
                risks.append("Алкоголизм, дофицит витамина В12, поражение костного мозга, интоксикация, отравление, рак, гипертиреоз. Рекомендуется избегать стрессов, больше отдыхать, отказаться от алкоголя и курения.")
            if mean_cell_volume < 80:
                risks.append("Анемия, кровопотеря, болезнь Крона, язвенный колит, талассемия. Рекомендуется употреблять в пищу красное мясо, курицу, яйца, морепродукты, зелёные листовые овощи, бобы, кунжут, тыквенные семечки.")
            if neutrophils > 72:
                risks.append("Сепсис, гангрена, ожог, трофические язвы, инфаркт, лейкоз, эритремия, почечная недостаточность, анемия, отравление ядом, пневмония, ангина, скарлатина, гнойный менингит, аппендицит, отит.")
            if neutrophils < 40:
                risks.append("Корь, краснуха, ВИЧ, токсоплазмоз, малярия, туберкулёз. Принимайте витаминные комплексы группы В.")
            if lymphocytes > 37:
                risks.append("Бронхиальная астма, лучевая болезнь, коклюш, туберкулёз, грипп, ОРВИ, ангина, лишай, ветряная оспа.")
            if lymphocytes < 19:
                risks.append("ВИЧ, корь, грипп, коронавирус, туберкулёз, лептоспироз, эрлихиоз, легионеллёз, лейкоз, рак, язвенный колит, ревматоидный артирит, травмы. Очень рекомендуется избегать стрессов.")
            if monocytes > 12:
                risks.append("Эндокардит, туберкулёз, сифилис, малярия, тиф, гепатит, мононуклеоз, опухолевые заболевания. Рекомендуется выполнять силовые и аэробные упражнения, есть зелёные листовые овощи, фрукты, жирную рыбу, помидоры.")
            if monocytes < 3:
                risks.append("Бронхиальная астма, болезнь Крона, анемия, лейкопения, гепатоспленомегалия, лимфаденопатия. Рекомендуется заниматься спортом, правильно и полноценно питаться, есть продукты с омега-3.")
            if eosinophils > 6:
                risks.append("Острый лейкоз, туберкулёз, эозинофилия, ревматическая лихорадка, ваготония, гипотиреоз, бронхиальная астма, конъюнктивит, ринит.")
            if eosinophils < 0.5:
                risks.append("Бронхиальная астма, отёк Квинке, болезнь Крона, псориаз, коронавирус, глистные инвазии, лейкоз, онкология. Избегайте приёма алкоголя, откажитесь от сигарет, придерживайтесь здорового питания.")
            if basophils > 1.5:
                risks.append("Отравление, заражение гельминтами, анемия, дефицит в крови железа, микседема, миелолейкоз, язвенный колит. Включите в рацион железосодержащие продукты: печень (особенно куриную), гречку, рыбу, морепродукты.")
            if basophils < 0.5:
                risks.append("Гипертиреоз, стресс, перенесённые инфекции. Рекомендуется исключить стрессовые ситуации, соблюдать режим сна и бодрствования.")
            if esr > 20:
                risks.append("Инфаркт, туберкулёз, сахарный диабет, панкреатит, холецистит, лейкоз, онкология, гельминтоз, ОРВИ, бронхит, грипп.")
            if esr < 2:
                risks.append("Анемия, полицитемия, язвенная болезнь желудка, острая кишечная инфекция, миелома, эпилепсия, ожог, нехватка витаминов. Рекомендуется наполнить меню полезными продуктами и сбалансировать их приём.")


            if risks:
                self.result_label.text = f"ВОЗМОЖНЫЕ заболевания: {''.join(risks)}"
            else:
                self.result_label.text = "Риски заболеваний отсутствуют."

        except ValueError:
            self.result_label.text = "Пожалуйста, введите числа во все поля."


if __name__ == '__main__':
    BloodTestRiskApp().run()